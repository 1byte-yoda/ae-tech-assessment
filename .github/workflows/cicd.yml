name: AE_EXAM_CICD

on:
  push:
    branches:
      - master

jobs:
  terraform:
    name: 'Terraform Lint, Security Check, and Deploy'
    runs-on: ubuntu-latest

    env:
      AWS_REGION: 'ap-southeast-2'
      TF_VERSION: '1.9.7'
      TFLINT_VERSION: '0.53.0'
      TFSEC_VERSION: '1.28.1'

    steps:
      - name: 'Checkout GitHub repository'
        uses: actions/checkout@v2

      - name: Determine Working Directory
        id: set_directory
        run: |
          if [[ "${GITHUB_REF}" == "refs/heads/master" ]]; then
            echo "WORKING_DIR=./terraform/prod" >> $GITHUB_ENV
          else
            echo "WORKING_DIR=./terraform/stage" >> $GITHUB_ENV
          fi

      - name: 'Configure AWS credentials'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: 'Set up Terraform'
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: 'Install TFLint'
        run: |
          curl -sLo tflint.zip https://github.com/terraform-linters/tflint/releases/download/v${{ env.TFLINT_VERSION }}/tflint_linux_amd64.zip
          unzip tflint.zip -d /usr/local/bin/
          tflint --version

      - name: 'Install tfsec'
        run: |
          curl -sLo tfsec https://github.com/aquasecurity/tfsec/releases/download/v${{ env.TFSEC_VERSION }}/tfsec-linux-amd64
          chmod +x tfsec
          mv tfsec /usr/local/bin/
          tfsec --version

      - name: 'Terraform Init'
        run: terraform init
        working-directory: ${{ env.WORKING_DIR }}

      - name: 'Terraform Format'
        run: terraform fmt
        working-directory: ${{ env.WORKING_DIR }}

      - name: 'Terraform Validate'
        run: terraform validate
        working-directory: ${{ env.WORKING_DIR }}

      - name: 'TFLint'
        run: |
          tflint --init
          tflint
        working-directory: ${{ env.WORKING_DIR }}

      - name: 'tfsec'
        run: tfsec .
        working-directory: ${{ env.WORKING_DIR }}

      - name: 'Terraform Plan'
        run: |
          ls
          terraform plan -out=tfplan
        working-directory: ${{ env.WORKING_DIR }}

      - name: 'Terraform Apply'
        if: github.ref == 'refs/heads/master'
        run: terraform apply -auto-approve tfplan
        working-directory: ${{ env.WORKING_DIR }}

  test:
    name: 'Pytest Dagster Objects'
    runs-on: ubuntu-latest
    needs: terraform

    env:
      AWS_REGION: 'ap-southeast-2'

    steps:
      - name: 'Configure AWS credentials'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: 'Checkout GitHub repository'
        uses: actions/checkout@v2

      - name: 'Install Project Required Modules'
        run: pip install -r requirements.txt

      - name: 'Run dbt debug for staging environment'
        run: dbt debug --target stage
        working-directory: dbt/ae_exam
        if: github.ref != 'refs/heads/master'

      - name: 'Run dbt debug for prod environment'
        run: dbt debug --target prod
        working-directory: dbt/ae_exam
        if: github.ref == 'refs/heads/master'

      - name: 'Run dbt compile'
        run: dbt compile
        working-directory: dbt/ae_exam

      - name: 'Run Pytest with Coverage Report'
        run: |
          pip install pytest==8.3.3
          pytest --junitxml=../../report.xml -v -s
        working-directory: dagster/data_analytics